FORMAT: 1A
HOST: https://coolector.tk/api

# Coolector

## Registration [/sign-up]

### Register via email [POST]

+ Request (application/json)

    + Headers
    
            Accept: application/json
            Authorization: Bearer API_KEY

    + Body
    
            {
              "email": "user1@email.com", 
              "name": "user1", 
              "password": "secret"
            }
    
+ Response 202

    + Headers

            X-Resource: account
            X-Operations: operations/{id}

## Authentication [/sign-in]

### Authenticate via email [POST]

+ Request (application/json)

    + Headers
    
            Accept: application/json
            Authorization: Bearer API_KEY

    + Body
    
            {
              "email": "user1@email.com", 
              "name": "user1", 
              "password": "secret"
            }
    
+ Response 200 (application/json)

        {
          "expiry": 1234567890,
          "sessionId": "SESSION_ID",
          "sessionKey": "SESSION_KEY",
          "token": "API_KEY"
        }
        
        
### Authenticate via Facebook [POST]

+ Request (application/json)

    + Headers
    
            Accept: application/json
            Authorization: Bearer API_KEY

    + Body
    
            {
              "accessToken": "FACEBOOK_ACCESS_TOKEN", 
              "provider": "facebook"
            }
    
+ Response 200 (application/json)

        {
          "expiry": 1234567890,
          "sessionId": "SESSION_ID",
          "sessionKey": "SESSION_KEY",
          "token": "API_KEY"
        }
        
        
## Account [/account]

### Get user account [GET]

+ Request

    + Headers
    
            Accept: application/json
            Authorization: Bearer API_KEY

+ Response 200 (application/json)

        {
          "userId": "19f2b8fc-20a5-4f5b-97d8-d653882492ad",
          "email": "user1@email.com", 
          "name": "user1",
          "provider": "coolector"          
          "pictureUrl": "",
          "role": "user",          
          "state": "active",          
          "externalUserId": "",          
          "createdAt": "2016-12-09 12:21:45"   
        }
        

## Available account name [/account/is-name-available/{name}]

### Check if account name is available [GET]

+ Request

    + Headers
    
            Accept: application/json

+ Response 200 (application/json)

        {
          "isAvailable": true
        }
        
        
## Account name [/account/name]

### Set name [PUT]

+ Request

    + Headers
    
            Accept: application/json
            Content-Type: application/json
            Authorization: Bearer API_KEY

    + Body
    
            {
              "name": "user1"
            }

+ Response 202

    + Headers

            X-Resource: account
            X-Operations: operations/{id}     
            
            

## Avatar [/account/avatar]

### Set avatar [PUT]

+ Request

    + Headers
    
            Accept: application/json
            Content-Type: application/json
            Authorization: Bearer API_KEY

    + Body
    
            {
              "pictureUrl": "full_image_url"
            }

+ Response 202

    + Headers

            X-Resource: account
            X-Operations: operations/{id}   


## Change password [/account/password]

### Set new password to the account [PUT]

+ Request

    + Headers
    
            Accept: application/json
            Content-Type: application/json
            Authorization: Bearer API_KEY

    + Body
    
            {
              "currentPassword": "secret",
              "newPassword": "secret1"
            }

+ Response 202

    + Headers

            X-Resource: account
            X-Operations: operations/{id} 
            

## Reset password [/reset-password]

### Reset password to the account [POST]

+ Request

    + Headers
    
            Accept: application/json
            Content-Type: application/json

    + Body
    
            {
              "email": "user1@email.com"
            }

+ Response 202

    + Headers

            X-Operations: operations/{id}        
            
## Set new password [/reset-password/set-new]

### Set new password to the account [POST]

+ Request

    + Headers
    
            Accept: application/json
            Content-Type: application/json

    + Body
    
            {
              "email": "user1@email.com",
              "password": "secret1"
              "token": "reset_password_token"
            }

+ Response 202

    + Headers

            X-Operations: operations/{id}   

## Remarks categories [/remarks/categories]

### Browse remarks categories [GET]

+ Request

    + Headers
    
            Accept: application/json

+ Response 200 (application/json)

        [
         {
           "id": "12f2b8f1-10ab-4f59-6ad3-b6528c239201",
           "name": "accidents"
         },
         {
           "id": "34f2b8f1-10ab-4f59-6ad3-b6528c239201",
           "name": "damages"
         },
         {
           "id": "56f2b8f1-10ab-4f59-6ad3-b6528c239201",
           "name": "litter"
         }         
        ]


## Remarks [/remarks{?page}{?results}{?latitude}{?longitude}{?radius}{?author}{?latest}{?categories}{?state}]

+ Parameters
    + page = `1` (optional, number) ... Number of page. 
    + results = `10` (optional, number) ... Number of results per page.
    + latitude = `` (optional, number) ... Latitude of the center position.
    + longitude = `` (optional, number) ... Longitude of the center position.
    + radius = 1000 (optional, number) ... Radius in meters.
    + author = `` (optional, string) ... Name of the remarks author.
    + latest = `false` (optional, bool) ... Flag true|false.
    + categories = `` (optional, list<string>) ... List of categories names.
    + state = `active` (optional, string) ... State of the remarks active|resolved.

### Browse remarks [GET]

+ Request

    + Headers
    
            Accept: application/json

+ Response 200 (application/json)

        [
         {
           "id": "49f2b8f1-10ab-4f59-6ad3-b6528c239201",
           "author": "user1", 
           "category": "litter",
           "location": {
             "address": "st. Test 123, 00-123 City, Country",
             "coordinates": [0.0, 0.0]
           },
           "smallPhotoUrl": "full_image_url",
           "description": "This is my remark.",          
           "state": "active",          
           "createdAt": "2016-12-09 12:21:45",
           "resolved": false
         }
        ]

### Create a remark [POST]

+ Request

    + Headers
    
            Accept: application/json
            Content-Type: application/json
            Authorization: Bearer API_KEY

    + Body
    
            {
              "category": "litter",
              "photo": {
                "base64": "ENCODED_BASE64_IMAGE",
                "name": "remark.jpg",
                "contentType": "image/jpeg"
              },
              "latitude": 0.0, 
              "longitude": 0.0,  
              "address":  "st. Test 123, 00-123 City, Country",
              "description": "This is my remark.",
              "socialMedia": [{
                "name": "facebook",
                "publish": true,
                "accessToken": "FACEBOOK_ACCESS_TOKEN"
              ]
            }

+ Response 202

    + Headers
    
            X-Resource: remarks/{remark_id}  
            X-Operations: operations/{operation_id}  


## Remark [/remarks/{id}]

+ Parameters
    + id (required, guid) ... Id of the remark. 

### Get remark [GET]

+ Request

    + Headers
    
            Accept: application/json

+ Response 200 (application/json)

        [
         {
           "id": "49f2b8f1-10ab-4f59-6ad3-b6528c239201",
           "author": {
            "userId": "19f2b8fc-20a5-4f5b-97d8-d653882492ad",
            "name": "user1"
           }, 
           "category": {
            "id": "29f2b8fe-30ab-1f5a-6cd1-a653782495ce",
            "name": "litter"
           },
           "location": {
             "address": "st. Test 123, 00-123 City, Country",
             "coordinates": [0.0, 0.0]
           },
           "photos": [ {
               "name": "small.jpg", 
               "size": "small",
               "url": "full_image_url",
               "metadata": ""
             },
             {
               "name": "medium.jpg", 
               "size": "medium",
               "url": "full_image_url",
               "metadata": ""
             },
             {
               "name": "big.jpg", 
               "size": "big",
               "url": "full_image_url",
               "metadata": ""
             }             
           ],
           "description": "This is my remark.",          
           "state": "active",          
           "createdAt": "2016-12-09 12:21:45",
           "resolved": true,
           "resolvedAt": "2016-12-09 13:35:11"
         }
        ]


### Delete remark [DELETE]

+ Request

    + Headers
    
            Accept: application/json
            Authorization: Bearer API_KEY

+ Response 202

    + Headers

            X-Operations: operations/{id} 


## Remark photos [/remarks/{remarkId}/photos]

### Add remark photos [PUT]

+ Parameters
    + remarkId (required, guid) ... Id of the remark. 

+ Request

    + Headers
    
            Accept: application/json
            Content-Type: application/json
            Authorization: Bearer API_KEY

    + Body
    
            {
              "photos": [{
                "base64": "ENCODED_BASE64_IMAGE",
                "name": "remark1.jpg",
                "contentType": "image/jpeg"
              }, {
                "base64": "ENCODED_BASE64_IMAGE",
                "name": "remark2.jpg",
                "contentType": "image/jpeg"
              }, {
                "base64": "ENCODED_BASE64_IMAGE",
                "name": "remark3.jpg",
                "contentType": "image/jpeg"
              }]
            }
    
+ Response 202

    + Headers
    
            X-Resource: remarks/{remark_id}  
            X-Operations: operations/{operation_id}              
            

## Resolve remark [/remarks/{id}/resolve]

+ Parameters
    + id (required, guid) ... Id of the remark. 

### Resolve remark [PUT]

+ Request

    + Headers
    
            Accept: application/json
            Authorization: Bearer API_KEY

+ Response 202

    + Headers
    
            X-Resource: remarks/{remark_id}  
            X-Operations: operations/{operation_id}  

## Users [/users{?page}{?results}]

+ Parameters
    + page = `1` (optional, number) ... Number of page. 
    + results = `10` (optional, number) ... Number of results per page.

### Browse users [GET]

+ Request

    + Headers
    
            Accept: application/json

+ Response 200 (application/json)

        [
         {
           "userId": "19f2b8fc-20a5-4f5b-97d8-d653882492ad",
           "email": "user1@email.com", 
           "name": "user1",
           "provider": "coolector"          
           "pictureUrl": "",
           "role": "user",          
           "state": "active",          
           "externalUserId": "",          
           "createdAt": "2016-12-09 12:21:45"   
         }
        ]


## User [/users/{name}]

+ Parameters
    + name (required, string) ... Name of the user. 

### Get user [GET]

+ Request

    + Headers
    
            Accept: application/json

+ Response 200 (application/json)

        {
          "userId": "19f2b8fc-20a5-4f5b-97d8-d653882492ad",
          "email": "user1@email.com", 
          "name": "user1",
          "provider": "coolector"          
          "pictureUrl": "",
          "role": "user",          
          "state": "active",          
          "externalUserId": "",          
          "createdAt": "2016-12-09 12:21:45"   
        }


## Operations [/operations/{id}]

+ Parameters
    + id (required, guid) ... Id of the operation. 

### Get operation details [GET]

+ Request

    + Headers
    
            Accept: application/json
            Authorization: Bearer API_KEY

+ Response 200 (application/json)

        {
          "id": "a2f2b8fc-30b5-4f5e-67d2-e943382492e0",
          "requestId": "b3f2b8f1-20b4-8f50-27ae-e941b820927f",
          "userId": "19f2b8fc-20a5-4f5b-97d8-d653882492ad",    
          "code": "success", 
          "message": "error message",
          "name": "operation_name"          
          "origin": "origin",
          "resource": "resource",          
          "state": "completed", 
          "success": true,
          "createdAt": "2016-12-09 12:21:45",
          "updatedAt": "2016-12-09 12:21:46" 
        }